{"version":3,"sources":["Components/Items/Items.module.scss","Components/Navbar/Navbar.module.scss","Components/Navbar/shopping-cart-icon.webp","App.module.scss","Context.jsx","Components/Navbar/Navbar.jsx","Components/Items/Items.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","CounterContext","createContext","CounterProvider","props","useState","counter","setCounter","Provider","value","handleCounterIncreament","prevState","handleCounterDecreament","setCounterToZero","children","Navbar","useContext","className","ClassNames","Header","src","ShopCart","alt","title","aria-label","Counter","Items","id","items","setItems","handleItemIncreament","index","temp","handleItemDecreament","handleItemDelete","splice","onClick","i","length","ResetBtn","window","location","reload","RestartBtn","map","key","bind","IncreamentBtn","DecreamentBtn","DeleteBtn","App","Main","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fabdfecb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Items\":\"Items_Items__tYWGp\",\"ResetBtn\":\"Items_ResetBtn__1ZZQl\",\"RestartBtn\":\"Items_RestartBtn__3vowV\",\"IncreamentBtn\":\"Items_IncreamentBtn__1gkt2\",\"DecreamentBtn\":\"Items_DecreamentBtn__17pyq\",\"DeleteBtn\":\"Items_DeleteBtn__2iCjj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Navbar_Header__eA2Ig\",\"ShopCart\":\"Navbar_ShopCart__17wSY\",\"Counter\":\"Navbar_Counter__3uoK8\"};","module.exports = __webpack_public_path__ + \"static/media/shopping-cart-icon.6191f436.webp\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"App_Main__1Q4tg\"};","import React, { createContext, useState } from 'react'\r\n\r\nconst CounterContext = createContext([]);\r\n\r\nconst CounterProvider = (props) => {\r\n    const [counter, setCounter] = useState(0);\r\n    const handleCounterIncreament = () => {\r\n        setCounter(prevState => prevState + 1);\r\n    }\r\n    const handleCounterDecreament = () => {\r\n        setCounter(prevState => prevState - 1);\r\n    }\r\n    const setCounterToZero = () => {\r\n        setCounter(0);\r\n    }\r\n    return (\r\n        <CounterContext.Provider value={{ counter, handleCounterIncreament, handleCounterDecreament, setCounterToZero }} {...props}>\r\n            {props.children}\r\n        </CounterContext.Provider>\r\n    )\r\n}\r\nexport { CounterContext, CounterProvider };","import React, { useContext } from 'react'\r\nimport { CounterContext } from \"../../Context\";\r\nimport ShopCart from \"./shopping-cart-icon.webp\";\r\nimport ClassNames from \"./Navbar.module.scss\";\r\nconst Navbar = () => {\r\n    const { counter } = useContext(CounterContext);\r\n\r\n    return (\r\n        <header className={ClassNames.Header}>\r\n            <img src={ShopCart} alt=\"Shop Cart\" title=\"shop Cart\" aria-label=\"Shop Cart\" className={ClassNames.ShopCart} />\r\n            <h1 className={ClassNames.Counter}>{counter}</h1>\r\n            <h2> Items </h2>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React, { useState, useContext } from 'react'\r\nimport ClassNames from \"./Items.module.scss\";\r\nimport { CounterContext } from \"../../Context\";\r\n\r\n\r\n\r\nconst Items = () => {\r\n\r\n    const { handleCounterIncreament, handleCounterDecreament, setCounterToZero } = useContext(CounterContext);\r\n\r\n    const [items, setItems] = useState([\r\n        { id: 1, value: 0 },\r\n        { id: 2, value: 0 },\r\n        { id: 3, value: 0 },\r\n        { id: 4, value: 0 },\r\n    ]);\r\n\r\n    const handleItemIncreament = (index) => {\r\n        const temp = [...items];\r\n        temp[index].value++;\r\n        if (temp[index].value === 1) {\r\n            handleCounterIncreament();\r\n        }\r\n        setItems(temp);\r\n    }\r\n    const handleItemDecreament = (index) => {\r\n        if (items[index].value > 0) {\r\n            const temp = [...items];\r\n            temp[index].value--;\r\n            setItems(temp);\r\n            if (temp[index].value < 1 && temp[index].value > -1) {\r\n                handleCounterDecreament();\r\n            }\r\n        }\r\n    }\r\n    const handleItemDelete = (index) => {\r\n        let temp = [...items];\r\n        if (temp[index].value >= 1) {\r\n            handleCounterDecreament();\r\n        }\r\n        temp.splice(index, 1);\r\n        setItems(temp);\r\n    }\r\n\r\n    const handleReset = () => {\r\n        for (let i = 0; i < items.length; i++) {\r\n            items[i] = 0;\r\n        }\r\n        setCounterToZero();\r\n    }\r\n\r\n    const handleRestart = () => {\r\n        window.location.reload();\r\n    }\r\n\r\n    return (\r\n        <div className={ClassNames.Items}>\r\n            <button onClick={handleReset} className={ClassNames.ResetBtn} aria-label=\"Reset\"> reset </button>\r\n            <button onClick={handleRestart} className={ClassNames.RestartBtn} aria-label=\"Restart\"> restart</button>\r\n            <ul>\r\n                {items.map(({id , value}, index) => {\r\n                    return (\r\n                        <li key={id}>\r\n                            <span>{value}</span>\r\n                            <button onClick={handleItemIncreament.bind(this, index)} className={ClassNames.IncreamentBtn} aria-label = \"increment by one\"> +++ </button>\r\n                            <button onClick={handleItemDecreament.bind(this, index)} className={ClassNames.DecreamentBtn} aria-label = \"decrement by one\"> --- </button>\r\n                            <button onClick={handleItemDelete.bind(this, index)} className={ClassNames.DeleteBtn} aria-label = \"Delete The Item\">del</button>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Items","import React from 'react';\nimport Navbar from './Components/Navbar/Navbar';\nimport { CounterProvider } from './Context';\nimport ClassNames from \"./App.module.scss\";\nimport Items from './Components/Items/Items';\nfunction App() {\n  return (\n    <CounterProvider>\n      <Navbar />\n      <main className={ClassNames.Main}>\n        <Items />\n      </main>\n    </CounterProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}